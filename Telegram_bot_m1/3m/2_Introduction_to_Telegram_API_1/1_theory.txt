Bot API представляет из себя HTTP-интерфейс для работы с ботами в Telegram.
Каждому боту при создании присваивается уникальный токен вида 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11.

Все запросы к Telegram Bot API должны осуществляться через HTTPS в следующем виде:
https://api.telegram.org/bot<token>/НАЗВАНИЕ_МЕТОДА.
Например:   https://api.telegram.org/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11/getMe

Допускаются GET и POST запросы. Для передачи параметров в Bot API доступны 4 способа:
Запрос в URL
application/x-www-form-urlencoded
application/json (не подходит для загрузки файлов)
multipart/form-data (для загрузки файлов)


Ответ придёт в виде JSON-объекта, в котором всегда будет булево поле ok и опциональное строковое поле description,
содержащее человекочитаемое описание результата. Если поле ok истинно,
то запрос прошёл успешно и результат его выполнения можно увидеть в поле result.
В случае ошибки поле ok будет равно false, а причины ошибки будут описаны в поле description.

Существует два диаметрально противоположных по логике способа получать обновления от вашего бота: getUpdates и вебхуки.
Входящие обновления будут храниться на сервере до тех пор, пока вы их не обработаете, но не дольше 24 часов.


Независимо от способа получения обновлений, в ответ вы получите объект Update, преобразованный в JSON.

Update - объект представляет из себя входящее обновление. Под обновлением подразумевается действие,
совершённое с ботом — например, получение сообщения от пользователя.
Только один из необязательных параметров может присутствовать в каждом обновлении.


Рассмотрим параметры данного объекта:

    update_id - Уникальный идентификатор обновления. Идентификаторы обновления начинаются с определенного положительного
    числа и последовательно увеличиваются. Этот идентификатор становится особенно удобным, если используются Webhooks,
    поскольку он позволяет вам игнорировать повторяющиеся обновления или восстанавливать правильную последовательность
    обновлений, если происходит сбой.

    message - Новое входящее сообщение любого типа — текст, фотография, стикер и т.д. (Необязательный параметр)

    inline_query - Новый входящий встроенный запрос.(Необязательный параметр)

    chosen_inline_result - Результат встроенного запроса,
    который был выбран пользователем и отправлен его собеседнику.(Необязательный параметр)

    callback_query - Новый входящий встроенный запрос.(Необязательный параметр)

    getUpdates - Этот метод используется для получения обновлений через long polling.
    Ответ возвращается в виде массива объектов Update. Long Polling — это технология,
    которая позволяет получать данные о новых событиях с помощью «длинных запросов».
    Сервер получает запрос, но отправляет ответ на него не сразу, а лишь тогда,
    когда произойдет какое-либо событие (например, придёт новое сообщение), либо истечет заданное время ожидания.

    offset - Идентификатор первого обновления, которое должно быть возвращено. Должно быть больше на единицу,
    чем самый высокий из идентификаторов ранее полученных обновлений. По умолчанию возвращаются обновления,
    начинающиеся с самого раннего неподтвержденного обновления. Обновление считается подтвержденным,
    как только вызывается getUpdates со смещением, превышающим его update_id.
    Отрицательное смещение может быть задано для получения обновлений, начиная с -offset update,
    из конца очереди обновлений. Все предыдущие обновления будут забыты.

    limit - Ограничивает количество извлекаемых обновлений. Принимаются значения в диапазоне от 1 до 100.
    Значение по умолчанию равно 100.

    timeout - Тайм-аут в секундах для длительного опроса. Значение по умолчанию равно 0, т.е. обычный короткий опрос
