setWebhook - метод необходим для задания URL вебхука, на который бот будет отправлять обновления.
Каждый раз при получении обновления на этот адрес будет отправлен HTTPS POST с сериализованным в JSON объектом Update.
При неудачном запросе к вашему серверу попытка будет повторена умеренное число раз.

Для большей безопасности рекомендуется включить токен в URL вебхука, например, так: https://yourwebhookserver.com/<token>.
Так как никто посторонний не знает вашего токена, вы можете быть уверены, что запросы к вашему вебхуку шлёт именно Telegram.
Вебхук – это механизм оповещения о происходящих в системе событиях посредством функций обратных вызовов.
Когда случается интересующее клиента событие, сервер отправляет HTTP-запрос на URL-адрес,
предоставленный клиентом для приема вебхуков.


url - HTTPS url для отправки запросов. Чтобы удалить вебхук, отправьте пустую строку.
certificate - Загрузка публичного ключа для проверки корневого сертификата.

    При подключенном и настроенном вебхуке метод getUpdates не будет работать.
    При использовании самоподписанного сертификата, вам необходимо загрузить публичный ключ с помощью параметра certificate.
    На текущий момент отправка обновлений через вебхуки доступна только на эти порты: 443, 80, 88, 8443.


getWebhookInfo - Содержит информацию о текущем состоянии вебхука

url - URL вебхука, может быть пустым

has_custom_certificate - True, если вебхук использует самозаверенный сертификат

pending_update_count - Количество обновлений, ожидающих доставки

С вебхуками подробнее мы познакомимся позже.

Рассмотрим доступные типы согласно официальной документации. Все типы, использующиеся в Bot API, являются JSON-объектами.

User - этот объект представляет бота или пользователя Telegram.

id - Уникальный идентификатор пользователя или бота

first_name - Имя пользователя или бота

last_name - Фамилия бота или пользователя(Необязательный параметр)

username - username бота или пользователя(Необязательный параметр)
