Следующие методы позволяют изменить существующее сообщение в истории сообщений вместо отправки нового сообщения с результатом действия.
Это наиболее полезно для сообщений со встроенной клавиатурой, использующих запросы обратного вызова,
но также может помочь уменьшить беспорядок в разговорах с обычными чат-ботами.

Пожалуйста, обратите внимание, что в настоящее время редактировать сообщения можно
только без reply_markup или с помощью встроенных клавиатур.
________________________________________________________________________________________________________________________
    1. editMessageText - Используйте этот метод для редактирования текстовых сообщений,
    отправленных ботом или через бота (для встроенных ботов).
    При успешном выполнении возвращается отредактированное сообщение.

    chat_id - Требуется, если не указан идентификатор inline_message_id.
        Уникальный идентификатор целевого чата или имя пользователя целевого канала (в формате @channelusername)

    message_id - Требуется, если не указан идентификатор inline_message_id. Уникальный идентификатор отправленного сообщения

    inline_message_id - Требуется, если не указаны chat_id и message_id. Идентификатор встроенного сообщения

    text - Новый текст сообщения

    parse_mode - Отправьте Markdown или HTML, если вы хотите, чтобы приложения Telegram отображали жирный,
        курсивный, текст фиксированной ширины или встроенные URL-адреса в сообщении вашего бота.

    disable_web_page_preview - Отключает предварительный просмотр ссылок для ссылок в этом сообщении

    reply_markup - Объект, сериализованный в формате JSON для встроенной клавиатуры.
________________________________________________________________________________________________________________________

    2. editMessageCaption - Используйте этот метод для редактирования подписей сообщений,
    отправленных ботом или через бота (для встроенных ботов).
    При успешном выполнении возвращается отредактированное сообщение.

    chat_id - Требуется, если не указан идентификатор inline_message_id.
        Уникальный идентификатор целевого чата или имя пользователя целевого канала (в формате @channelusername)

    message_id - Требуется, если не указан идентификатор inline_message_id. Уникальный идентификатор отправленного сообщения

    inline_message_id - Требуется, если не указаны chat_id и message_id. Идентификатор встроенного сообщения

    caption - Новая подпись к сообщению

    reply_markup -  Объект, сериализованный в формате JSON для встроенной клавиатуры.
________________________________________________________________________________________________________________________

    3. editMessageReplyMarkup - Используйте этот метод для редактирования только разметки ответов сообщений,
    отправленных ботом или через бота (для встроенных ботов).
    При успешном выполнении возвращается отредактированное сообщение.

    chat_id - Требуется, если не указан идентификатор inline_message_id.
        Уникальный идентификатор целевого чата или имя пользователя целевого канала (в формате @channelusername)

    message_id - Требуется, если не указан идентификатор inline_message_id.
    Уникальный идентификатор отправленного сообщения

    inline_message_id - Требуется, если не указаны chat_id и message_id. Идентификатор встроенного сообщения

    reply_markup - Объект, сериализованный в формате JSON для встроенной клавиатуры.
________________________________________________________________________________________________________________________


У ботов есть помимо обычного еще и инлайн режим.
Инлайн-режим (inline mode) — это специальный режим работы бота,
с помощью которого пользователь может использовать бота во всех чатах.
Выглядит это так: пользователь вводит юзернейм бота в поле для ввода сообщения.
После юзернейма можно ещё записать запрос (текст до 256 символов).
Появляется менюшка с результатами. Выбирая результат, пользователь отправляет сообщение.
Инлайн-режим можно включить в BotFather, там же можно выбрать плейсхолдер вместо стандартного "Search..."
В группе можно запретить использовать инлайн всем или некоторым участникам.
В официальных приложениях Телеграм это ограничение объединено с ограничением на отправку стикеров и GIF.

Когда пользователь вызывает инлайн-режим, бот не может получить никакую информацию о контексте,
кроме информации о пользователе. Таким образом, бот не может узнать ни чат, в котором вызвали инлайн, ни сообщение,
на которое пользователь отвечает.
Но зато если включить в BotFather настройку "Inline Location Data", то бот сможет видеть геопозицию пользователей,
когда они используют инлайн (на мобильных устройствах). Перед этим у пользователей показывается предупреждение.

С инлайн режимом мы работать не будем, но знать что он существует вы должны.

________________________________________________________________________________________________________________________

    1. InlineQuery - Этот объект представляет входящий встроенный запрос. Когда пользователь отправляет пустой запрос,
    ваш бот может вернуть некоторые результаты по умолчанию или трендовые результаты.

    id - Уникальный идентификатор для этого запроса

    from - Отправитель

    location - Уникальный идентификатор для этого местоположения отправителя запроса, только для ботов,
        которые запрашивают местоположение пользователя

    query - Текст запроса

    offset - Смещение результатов, которые будут возвращены, может контролироваться ботом
________________________________________________________________________________________________________________________

    2. answerInlineQuery - Используйте этот метод для отправки ответов на встроенный запрос.
    В случае успеха возвращается значение True.
    Допускается не более 50 результатов на запрос.

    inline_query_id - Уникальный идентификатор для ответа на запрос

    results - Сериализованный в формате JSON массив результатов для встроенного запроса

    cache_time - Максимальное время в секундах, в течение которого результат встроенного запроса может
        кэшироваться на сервере. Значение по умолчанию равно 300.

    is_personal - Передайте значение True, если результаты могут быть кэшированы на стороне сервера только для пользователя,
        отправившего запрос. По умолчанию результаты могут быть возвращены любому пользователю, отправившему тот же запрос

    next_offset - Передайте смещение, которое клиент должен отправить в следующем запросе с тем же текстом,
        чтобы получить больше результатов. Передайте пустую строку, если результатов больше нет или если вы не поддерживаете
            разбивку на страницы. Длина смещения не может превышать 64 байта

    switch_pm_text - Если он передан, клиенты отобразят кнопку с указанным текстом, которая переключает пользователя
        в приватный чат с ботом и отправляет боту стартовое сообщение с параметром switch_pm_parameter

    switch_pm_parameter - Параметр для начального сообщения, отправляемого боту при нажатии пользователем кнопки переключения
________________________________________________________________________________________________________________________

InlineQueryResult - Этот объект представляет один результат встроенного запроса. Клиенты Telegram в настоящее время поддерживают результаты следующих 19 типов:

InlineQueryResultCachedAudio
InlineQueryResultCachedDocument
InlineQueryResultCachedGif
InlineQueryResultCachedMpeg4Gif
InlineQueryResultCachedPhoto
InlineQueryResultCachedSticker
InlineQueryResultCachedVideo
InlineQueryResultCachedVoice
InlineQueryResultArticle
InlineQueryResultAudio
InlineQueryResultContact
InlineQueryResultDocument
InlineQueryResultGif
InlineQueryResultLocation
InlineQueryResultMpeg4Gif
InlineQueryResultPhoto
InlineQueryResultVenue
InlineQueryResultVideo
InlineQueryResultVoice


Более подробно о работе с inline режимом вы можете ознакомиться в официальной документации
________________________________________________________________________________________________________________________

Ранее мы немного рассмотрели как работать через Bot Api без использования библиотек,
но на сегодняшний день огромное количество различных библиотек, которые максимально удобно реализуют взаимодействие с Bot Api.
Нам же остается изучить методы и классы какой либо библиотеки, для того чтобы начать работать.

Мы с вами начнем знакомство с библиотекой aiogram. В отличие от других библиотек aiogram - асинхронная библиотека.
Асинхронное программирование — это особенность современных языков программирования, которая позволяет выполнять операции, не дожидаясь их завершения.

Для начала давайте создадим каталог для бота, организуем там virtual environment (далее venv) и установим библиотеку aiogram

Теперь установим модуль:
pip install aiogram
Также нам понадобится библиотека python-dotenv для файлов конфигурации
pip install python-dotenv
