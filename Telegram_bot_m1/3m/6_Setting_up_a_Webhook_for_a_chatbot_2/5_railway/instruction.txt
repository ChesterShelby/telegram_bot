Переходим на github и создаем новый проект
(Картиночка 1)

После этого в railway создаем новый проект
(Картиночка 2-3)

выбираем деплой из гитхаба
(Картиночка 4)

Далее прописываем стандартный код бота
import logging

from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = 'Ваш токен'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def echo(message: types.Message):
   await message.reply('Start')


@dp.message_handler(commands=['help'])
async def echo(message: types.Message):
   await message.reply('Вы обратились к справке бота')


if __name__ == '__main__':
   executor.start_polling(dp, skip_updates=True)


Создадим отдельно специальный файл Procfile без  расширения и запишем в него строку
worker: python имя файла

Также нам надо создать файл requirements.txt, с прописанными всеми установленными библиотеками.
Для этого воспользуемся командой
pip freeze > requirements.txt

После всех этих манипуляций у нас должно быть три файла. Теперь переходим в наш созданный проект в github
и просто перетягиваем туда все три файла.

После этого railway должен начать сборку и деплой нашего бота

После того как процесс завершится ваш бот будет готов к работе. В бесплатной версии данного сервиса нам дано 500 часов для ваших проектов

Реализацию выгрузки с вебхуками на отдельный сервис мы рассмотрим на следующем занятии. Ранее был отличный сервис Heroku, но увы он теперь закрыл регистрацию.
