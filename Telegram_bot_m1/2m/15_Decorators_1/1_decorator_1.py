"""
Декораторы — это, по сути, "обёртки", которые дают нам возможность изменить поведение функции, не изменяя её код.

По сути декоратор — это функция, которая принимает функцию, делает что-то и возвращает другую функцию.
"""


def decorator(func):
    def wrapper():
        print('функция-оболочка')
        func()

    return wrapper


def basic():
    print('основная функция')


wrapped = decorator(basic)
print('старт программы')
basic()
wrapped()
print('конец программы')
