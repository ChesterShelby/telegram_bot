"""
Итератор (iterator) - это объект, который возвращает свои элементы по одному за раз.
С точки зрения Python - это любой объект(экземпляр класса), у которого есть метод __next__.
Этот метод возвращает следующий элемент, если он есть, или возвращает исключение StopIteration,
когда элементы закончились. Кроме того, итератор запоминает, на каком объекте он остановился в последнюю итерацию.

Коллекции,  строки — это все итерируемые объекты. Они являются итерируемыми контейнерами,
из которых вы можете получить итератор. Все эти объекты имеют метод iter(),
который используется для получения итератора.

Обратите внимание, что итерируемый объект не обязательно является итератором.
Поскольку на самом деле сам по себе он не выполняет итерацию. У вас может быть отдельный объект-итератор,
который возвращается из итерируемого класса, а не класс, обрабатывающий свою собственную итерацию.
"""

a = 'hello'
iterator = iter(a)
print(next(iterator))
print(next(iterator))
print(next(iterator))
print(next(iterator))
print(next(iterator))
# print(next(iterator))
